class Solution {
    public boolean isVowel(char c){
        if(c=='a' || c=='e' || c=='i' || c=='o' || c=='u')
        return true;

        return false;
    }

    public int maxFreqSum(String s) {
        HashMap<Character,Integer>cons= new HashMap<>();
        HashMap<Character,Integer>vowels= new HashMap<>();

        for(int i=0;i<s.length();i++){
            char ch=s.charAt(i);
            if(isVowel(ch))
            vowels.put(ch,vowels.containsKey(ch) ? vowels.get(ch)+1 : 1);
            else
            cons.put(ch,cons.containsKey(ch) ? cons.get(ch)+1 : 1);
        }

        int vowelFreq = 0;
         for (int value : vowels.values()) {
            if (value > vowelFreq) {
                vowelFreq = value;
            }
        }

        int constFreq=0;
         for (int value : cons.values()) {
            if (value > constFreq) {
                constFreq = value;
            }
        }

        return vowelFreq + constFreq;
    }
}
