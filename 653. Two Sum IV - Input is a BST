/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean insertandcheck(TreeNode root,Set<Integer>hs,int k){
        if(root==null){
            return false;
        }
        if(hs.contains(k-root.val)){
            return true;
        }
        hs.add(root.val);
      return  insertandcheck(root.left,hs,k)   ||  insertandcheck(root.right,hs,k);

    }
    public boolean findTarget(TreeNode root, int k) {
        HashSet<Integer>hs = new HashSet<>();
       return insertandcheck(root,hs,k);
    }
}
